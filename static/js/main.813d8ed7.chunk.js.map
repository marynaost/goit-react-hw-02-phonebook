{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.js","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","label","htmlFor","input","type","pattern","title","required","onChange","id","button","Component","Contact","contact","onDeleteContact","onClick","ContactList","contacts","length","noContacts","item","map","list","Filter","App","filter","addContact","newContacts","find","toLowerCase","alert","deleteContacts","contactsId","prevState","changeFilter","getFilteredContacts","normalizedFilter","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.813d8ed7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1Qvri\",\"input\":\"Filter_input__2oE6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ehcgF\",\"label\":\"ContactForm_label__1jrBQ\",\"input\":\"ContactForm_input__iPz0h\",\"button\":\"ContactForm_button__1B3fq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1vI1n\",\"noContacts\":\"ContactList_noContacts__1Y8Ea\",\"list\":\"ContactList_list__3eixE\",\"button\":\"ContactList_button__Mqy7X\"};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.scss';\r\n\r\nexport class ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label className={s.label} htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.scss';\r\nconst Contact = ({ contact, onDeleteContact }) => (\r\n  <>\r\n    <span>\r\n      {contact.name}: {contact.number}\r\n    </span>\r\n    <button\r\n      className={s.button}\r\n      type=\"button\"\r\n      onClick={() => onDeleteContact(contact.id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </>\r\n);\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.scss';\r\nimport Contact from './Contact';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return contacts.length === 0 ? (\r\n    <div className={s.noContacts}>You haven't contacts!</div>\r\n  ) : (\r\n    <ul className={s.item}>\r\n      {contacts.map(contact => (\r\n        <li className={s.list} key={contact.id}>\r\n          <Contact contact={contact} onDeleteContact={onDeleteContact} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.scss';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <>\r\n      <label className={s.label}>\r\n        Find contact by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport shortid from 'shortid';\r\nimport { ContactForm } from 'components/ContactForm/ContactForm';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport Filter from 'components/Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n    const newContacts = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    contacts.find(\r\n      contact => newContacts.name.toLowerCase() === contact.name.toLowerCase(),\r\n    )\r\n      ? alert(`${newContacts.name} is already in contacts`)\r\n      : this.setState(({ contacts }) => ({\r\n          contacts: [newContacts, ...contacts],\r\n        }));\r\n  };\r\n\r\n  deleteContacts = contactsId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactsId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDeleteContact={this.deleteContacts}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}